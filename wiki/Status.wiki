#summary Status of the BTstack implementation

The BTstack is in early development phase and mostly suited for people interesting in learning their way around in the Bluetooth Stack. However, the example test.c can create an L2CAP connection to a WiiMote and receive acceleration data.

= Bluetooth Layers =

== HCI Transport ==

=== H4 ===
 * The original H4 protocol for UARTs is fully implemented and working.

=== BCSP/H5 ===
 * The more advanced CSR BSCP and the "Three Wire UART" transport protocol are not supported.

== HCI ==
 * A minimal HCI layer is implemented. Instead of implementing each HCI command separately, a table-driven approach allows to add HCI commands by only specifying the command packet format.

== L2CAP ==
 * The L2CAP State Machine can open an HCI connection and set up an outgoing L2CAP channel. More work has to done: incoming connections, MTU negotiation, packet segmentation, packet reassembly and flow control are not implemented. 

== RFCOMM ==
 * Quite some interest, development has started. See [RFCOMM] The existing L2CAP implementation is sufficient.

= Other =

== BT Control ==
=== iPhone and iPod touch ===
 * The iPhone control component is able to switch the Bluetooth chipset on/off and properly initialize them in HCI H4 Transport mode with baud rates from 57600-921600 on all iPhone and iPod touch devices with build-in Bluetooth.
 * Higher rates cannot be specified yet, especially not the 2.4 Mbps used by Apple. The problem is not with the Bluetooth chipset. The termios call to set the speed of the serial port returns "invalid parameter" for higher baud rates.
 * Repeated power on/off work without issues, so the BTdaemon can keep running with the BT turned off completely while the iPhone is in sleep mode.
 * A new SpringBoardAccess extension allows the BTdaemon to show a BTstack icon similiar to Apple's Bluetooth icon. 
 * BTdaemon can be automatically started Launchd. This makes it more robust and allows for an automatic power-off, when no application is using Bluetooth.
 * Successfully tested on iPhone 3G with OS 2.2.1 and 3.0, iPod touch 2G with 2.2.1 and 3.0, and iPhone 3GS with 3.0.1.

== Logging/Debugging ==
 * hci_dump.c supports multiple formats:
    * Apple's PacketLogger
    * Linux BlueZ format
    * Direct packet hexdump to stdout.

== Integration with existing Run Loop ==
The BTstack and its client library can work with different run loops. BTdaemon uses its own basic select()-based run loop that supports POSIX file descriptors and timers.The client library can used with the POSIX run loop as well as with a Cocoa CFRunLoop wrapper inside of an Cocao(Touch) UI application.