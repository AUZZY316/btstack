#summary Status of the BTstack implementation

The BTstack is in early development phase and mostly suited for people interesting in learning their way around in the Bluetooth Stack. However, the example main.c can create an authenticated L2CAP connection and receive data packets.

= Bluetooth Layers =

== HCI Transport ==

=== H4 ===
 * The original H4 protocol for UARTs is fully implemented and working.
=== BCSP/H5 ===
 * The more advanced CSR BSCP and the "Three Wire UART" transport protocol are not supported.

== HCI ==
 * A minimal HCI layer is implemented. Instead of implementing each HCI command separately, a table-driven approach allows to add HCI commands by only specifying the command packet format.

== L2CAP ==
 * Testing code for L2CAP is working - a connection can be established - but it is not yet made into a reusable L2CAP layer. More specifically, neither packet segmentation, packet reassembly, multiple connections or flow control are implemented. 

= Other =

== BT Control ==
=== iPhone and iPod touch ===
 * The iPhone control component is able to switch the Bluetooth chipset on/off and properly initialize in to HCI H4 Transport mode with configurable baud rates from 57600-921600.
 * Higher rates cannot be specified yet, especially not the 2.4 Mbps used by Apple. The problem is not with the Bluetooth chipset. The ioctl call to set the speed of the serial port just returns "invalid parameter" for higher baud rates.
 * Repeated power on/off work without issues, so the BTdaemon can keep running with the BT turned off completely while the iPhone is in sleep mode.
 * Successfully tested on iPhone 3G with OS 2.2.1 and 3.0

== Logging/Debugging ==
 * hci_dump.c supports both logging in Apple's PacketLogger format as well as in the Linux BlueZ format.

== Run Loop ==
A basic run loop handler allows to add multiple data sources that are represented as POSIX file descriptors. The H4 HCI transport is run loop compatible. A rudimentary TCP socket server is available.