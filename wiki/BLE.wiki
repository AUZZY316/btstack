#summary Bluetooth 4.0 Low Energy - Bluetooth Smart Devices

= BTstack and Bluetooth 4.0 - Bluetooth Smart Devices =
BTstack provides early support for Bluetooth Smart devices, both as single mode or dual mode stack (not tested yet). 

Bluetooth Smart devices implement one or more GATT profiles. These GATT profiles define a set of one or more Services that each define a set of Characteristics. These profiles have a similar role as the SDP records in classic Bluetooth.

In BTstack, a GATT Profile compiler converts a textual representation of the GATT Services and Characteristics into a compact internal format used by the ATT protocol server.

The ATT protocol server answers incoming ATT requests based on information provided in the compiled database and provides read- and write-callbacks for dynamic attributes.

== GATT Profiles ==
GATT profiles are defined by a simple textual comma separated value (.csv) representation. This has the benefit, that while the description is easy to read and edit, it is compact and doesn't require RAM on the embedded memory as it constant.

The current format is: 
{{{
PRIMARY_SERVICE, {SERVICE_UUID}
CHARACTERISTIC, {ATTRIBUTE_TYPE_UUID}, [READ | WRITE | DYNAMIC], {VALUE}
}}}

Reads/writes to a Characteristic that is defined as DYNAMIC results in application callbacks. Other Characteristics cannot be written and return the specified constant value. See {{{profile.gatt}}} in the example folder and the GATT compiler {{{compile-gatt.py}}}.

== ATT Protocol ==
ATT sits on top of L2CAP. For a single mode Bluetooth 4.0 device, L2CAP does not provide much functionality. Because of this, a limited version is provides as l2cap_le.c in the ble folder.

== Example ==
{{{MSP-EXP430F5438-CC256x/example-ble}}} provides a ready to run example for a test Peripheral device. It assumes that a PAN1323 module with a CC2564 chipset is plugged into the RF socket. 

It defines 3 dynamic Characteristics. Writing characteristic with the UUID fff1 (handle 0x000b) sets the displayed text on the LCD display, writing characteristics fff2 (handle 0x000d) controls an LED on the board.

== Next Steps ==
Currently, the complete Low Energy configuration of the Bluetooth module is handled by the {{{ble_server}}} example application. This should be moved into {{{hci.c}}}. It isn't clear how which of those LE setup commands need to be customized in real applications.